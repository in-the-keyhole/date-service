apiVersion: v1
items:
# IMAGE STREAM
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      generation: 1
      labels:
        app: date-service
      name: date-service
    spec:
      lookupPolicy:
        local: false
# BUILD CONFIG 
  - apiVersion: build.openshift.io/v1
    kind: BuildConfig
    metadata:
      labels:
        app: date-service
      name: date-service
    spec:
      failedBuildsHistoryLimit: 5
      nodeSelector: null
      output:
        to:
          kind: ImageStreamTag
          name: date-service:latest
      postCommit: {}
      resources: {}
      runPolicy: Serial
      source:
        dockerfile: |-
          FROM adoptopenjdk/openjdk11:alpine-slim as builder

          WORKDIR /app
          COPY . .
          RUN ./mvnw clean package -DskipTests -P openshift

          FROM adoptopenjdk/openjdk11:alpine-jre
          RUN apk add --no-cache curl
          RUN curl -fsSLk https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64 -o /usr/local/bin/jq
          RUN chmod a+x /usr/local/bin/jq
          COPY --from=builder /app/target/application.jar /
          ENTRYPOINT ["java","-Djava.security.egd=file:/dev/./urandom","-jar","/application.jar"]
        git:
          ref: istio
          uri: https://github.com/in-the-keyhole/date-service.git
        type: Git
      strategy:
        dockerStrategy:
          noCache: true
        type: Docker
      successfulBuildsHistoryLimit: 5
      triggers: []
# PIPELINE
  - apiVersion: v1
    kind: BuildConfig
    metadata:
      labels:
        app: date-service
      name: date-service-pipeline
      annotations:
        pipeline.alpha.openshift.io/uses:
          [
            {
              "name": "date-service",
              "namespace": "",
              "kind": "DeploymentConfig",
            },
          ]
    spec:
      failedBuildsHistoryLimit: 5
      nodeSelector: null
      output: {}
      postCommit: {}
      resources: {}
      runPolicy: Serial
      source:
        git:
          ref: master
          uri: https://github.com/in-the-keyhole/date-service.git
        sourceSecret:
          name: git-credentials
        type: Git
      strategy:
        jenkinsPipelineStrategy:
          jenkinsfile: >
            pipeline {
              agent { node { label 'maven' } }
              stages {
                stage('Fetch Source') {
                  steps {
                    git url: 'https://github.com/in-the-keyhole/date-service.git', branch: 'master'
                  }
                }
                
                stage('Unit Testing') {
                  steps {
                    sh("./mvnw clean test")
                  }
                }

                stage('Build Image') {
                  steps {
                    script {
                      openshift.withCluster() {
                        openshift.withProject("development") {
                          openshift.selector("bc", "date-service").startBuild("--wait")
                        }
                      }
                    }
                  }
                }

                stage('Deploy') {
                  steps {
                    script {
                      openshift.withCluster() {
                        openshift.withProject("development") {
                          def dc = openshift.selector("dc", "date-service")
                          def rm = dc.rollout().latest()
                          dc.rollout().status()
                        }
                      }
                    }
                  }
                }
              }
            }
        type: JenkinsPipeline
      successfulBuildsHistoryLimit: 5
      triggers:
        - github:
            secretReference:
              name: github
          type: GitHub
# DEPLOYMENT CONFIG
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      labels:
        app: date-service
      name: date-service
    spec:
      replicas: 1
      revisionHistoryLimit: 10
      selector:
        deploymentconfig: date-service
      strategy:
        activeDeadlineSeconds: 21600
        resources: {}
        rollingParams:
          intervalSeconds: 1
          maxSurge: 25%
          maxUnavailable: 25%
          timeoutSeconds: 600
          updatePeriodSeconds: 1
        type: Rolling
      template:
        metadata:
          annotations:
            sidecar.istio.io/inject: "true"
          labels:
            app: date-service
            deploymentconfig: date-service
        spec:
          containers:
            - env:
                - name: JAVA_OPTS
                  value: -Xss256K -Xms16M -Xmx32M
                - name: server_port
                  value: "8080"
              image: date-service:latest
              imagePullPolicy: Always
              name: date-service
              ports:
                - containerPort: 8080
                  protocol: TCP
              resources: {}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
      test: false
      triggers:
        - imageChangeParams:
            containerNames:
              - date-service
            from:
              kind: ImageStreamTag
              name: date-service:latest
          type: ImageChange
# SERVICE
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: date-service
      name: date-service
    spec:
      ports:
        - name: 8080-tcp
          port: 8080
          protocol: TCP
          targetPort: 8080
      selector:
        deploymentconfig: date-service
      sessionAffinity: None
      type: ClusterIP
# ROUTE
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      labels:
        app: date-service
      name: date-service
    spec:
      port:
        targetPort: 8080-tcp
      subdomain: ""
      tls:
        insecureEdgeTerminationPolicy: None
        termination: edge
      to:
        kind: Service
        name: date-service
        weight: 100
      wildcardPolicy: None
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
